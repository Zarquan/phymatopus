#
# <meta:header>
#   <meta:licence>
#     Copyright (c) 2018, ROE (http://www.roe.ac.uk/)
#
#     This information is free software: you can redistribute it and/or modify
#     it under the terms of the GNU General Public License as published by
#     the Free Software Foundation, either version 3 of the License, or
#     (at your option) any later version.
#
#     This information is distributed in the hope that it will be useful,
#     but WITHOUT ANY WARRANTY; without even the implied warranty of
#     MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
#     GNU General Public License for more details.
#  
#     You should have received a copy of the GNU General Public License
#     along with this program.  If not, see <http://www.gnu.org/licenses/>.
#   </meta:licence>
# </meta:header>
#
#


    #
    # HTM Documentation
    # http://www.skyserver.org/HTM/doc/
    # http://www.skyserver.org/HTM/doc/intro.aspx

    #
    # The Indexing of the SDSS Science Archive.
    # P. Z. Kunszt, A. S. Szalay, I. Csabai, A. R. Thakar 
    # http://www.skyserver.org/HTM/doc/adass99.ps

    #
    # The Hierarchical Triangular Mesh.
    # P. Z. Kunszt, A. S. Szalay, A. R. Thakar
    # http://www.skyserver.org/HTM/doc/kunszt.ps.gz

    #
    # Splitting the sky - HTM and HEALPix.
    # W. Oâ€™Mullane, A. J. Banday, K. Gorski, P. Kunszt, A. Szalay
    # http://www.skyserver.org/HTM/doc/womullan_082000.pdf
    
    #
    # Source code download.
    # http://www.skyserver.org/HTM/implementation.aspx#download



    Two steps to crossmatch process
    
    1) list the htmid triangles that are inside or overlap with the target area (circle)
            - sherlock does this using a Python wrapper around the C++ code from JHU.
            - could we do this using the Java code from JHU ?

    2) find all the sources inside each of those triangles
            - currently done using a IN query on an SQL database
            - is there a case for just having an in memory tree of arrays ?



