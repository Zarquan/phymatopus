#
# <meta:header>
#   <meta:licence>
#     Copyright (c) 2018, ROE (http://www.roe.ac.uk/)
#
#     This information is free software: you can redistribute it and/or modify
#     it under the terms of the GNU General Public License as published by
#     the Free Software Foundation, either version 3 of the License, or
#     (at your option) any later version.
#
#     This information is distributed in the hope that it will be useful,
#     but WITHOUT ANY WARRANTY; without even the implied warranty of
#     MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
#     GNU General Public License for more details.
#  
#     You should have received a copy of the GNU General Public License
#     along with this program.  If not, see <http://www.gnu.org/licenses/>.
#   </meta:licence>
# </meta:header>
#
#


    Webservice API for config, status and control
    
    Kakfa connector - inputs and outputs
    
    In memory database to do rapid cross matching
    
    Hierarchical Triangular Mesh
    http://www.skyserver.org/htm/HtmPrimer/tut_htm.html
    

    Generate events with ra,dec-> kafka
    
    Instruct 'matcher' to listen to a kafka stream.
    
    HTM-generator adds htmid annotation to ra,dec events

        http://skyserver.org/htm/
        http://www.skyserver.org/htm/implementation.aspx
        https://github.com/ajmendez/htm
        https://link.springer.com/chapter/10.1007/10849171_83

        http://hmpty.readthedocs.io/en/stable/
        
    not healpix
    
        http://healpix.sourceforge.net/index.php
        https://healpix.jpl.nasa.gov/
        https://en.wikipedia.org/wiki/HEALPix
        
    
    catalog-matcher matches based on table of ra,dec,htmid,catalogid,sourceid
        database created using the same HTM-generator code

    pipe connectors
    
        split-any
        
            round robin split to one-of-many identical workers

        split-union
    
            same query to all workers, aggregates responses 



    main target is to experiment with processing high data rate streams
    
        pull sources from the ROE catalogs and process them into match tables
        push the match tables to disc cache
        pull the match tables back into memory

        how much can we do with 120G of memory ?    

    indirectly, can firethorn cope with that volume ? 

        pull sources from the ROE catalogs and process them into match tables

        firethorn query
            - Java client ?
            - row limit ?
            - write to Kafka activity ?
            
        votable response
            - votable input, Kafka output
            - votable input, JDBC output

        Kafka buffer service - input stream, written to log, wait for listener

        mapping between columns in a database table and fields in an Avro stream        

        firethorn query
            output also sent to Kafka topic
            output only sent to Kafka topic
            

    --------------------------

    Avro Introduction
    http://cloudurable.com/blog/avro/index.html

    Avro Serialization and the Schema Registry
    http://cloudurable.com/blog/kafka-avro-schema-registry/index.html

    Kafka Architecture
    http://cloudurable.com/tags/kafka-architecture/index.html

 ** Writing a Kafka Producer in Java
 ** http://cloudurable.com/blog/kafka-tutorial-kafka-producer/index.html

    org.apache.avro.Schema
    https://avro.apache.org/docs/1.8.0/api/java/index.html?org/apache/avro/Schema.html

    http://cloudurable.com/blog/kafka-tutorial-v1/index.html

    https://kafka.apache.org/10/javadoc/index.html?org/apache/kafka/clients/producer/KafkaProducer.html

    --------------------------
    
    http://reactivex.io/tutorials.html
    https://github.com/jhusain/learnrxjava/
    https://spring.io/blog/2013/05/13/reactor-a-foundation-for-asynchronous-applications-on-the-jvm

    --------------------------

    Apache Kafka Security 101
    https://www.confluent.io/blog/apache-kafka-security-authorization-authentication-encryption/

    Kafka Security
    http://kafka.apache.org/documentation.html#security

    Apache Kafka Authorization with Apache Sentry
    https://cwiki.apache.org/confluence/display/SENTRY/Apache+Kafka+Authorization+with+Apache+Sentry

    --------------------------

    Kafka JDBC connector bulk mode
    https://stackoverflow.com/questions/36690360/kafka-jdbc-connector-bulk-mode

    JDBC Source Connector
    https://docs.confluent.io/current/connect/connect-jdbc/docs/source_connector.html#quick-start

    Kafka Connect
    http://kafka.apache.org/documentation.html#connect

    kafka-jdbc-connector
    https://github.com/agoda-com/kafka-jdbc-connector

    Confluent JDBC Connector
    https://docs.confluent.io/current/connect/connect-jdbc/docs/index.html

    --------------------------

    The QUB Transient Classifier 
    https://github.com/thespacedoctor/sherlock

    --------------------------

    Read and understand the NIST Application Container Security Guide
    http://nvlpubs.nist.gov/nistpubs/SpecialPublications/NIST.SP.800-190.pdf

    --------------------------

    Martin Fowler on microservices
    https://martinfowler.com/articles/microservices.html  

    --------------------------

    Kafdrop is a UI for monitoring Apache Kafka clusters
    https://github.com/HomeAdvisor/Kafdrop


    http://wfau.roe.ac.uk/


